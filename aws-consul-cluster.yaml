AWSTemplateFormatVersion: 2010-09-09
Description: Consul cluster
Parameters:
  Region:
    Type: String
    Description: AWS Region
    Default: ap-southeast-1
    AllowedValues:
    - us-east-1
    - us-east-2
    - us-west-1
    - us-west-2
    - ap-south-1
    - ap-northeast-1
    - ap-northeast-2
    - ap-southeast-1
    - ap-southeast-2
    - ca-central-1
    - eu-central-1
    - eu-west-1
    - eu-west-2
    - eu-west-3
    - sa-east-1
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access into servers
  BaseImageId:
    Type: String
    Description: ID of consul image which is built from aws-consul-image.json packer template
  InstanceType:
    Type: String
    Description: Instance type to launch EC2 instances
    Default: t2.micro
  DataVolumeSize:
    Type: Number
    MinValue: 5
    Default: 5
    ConstraintDescription: Must greater than 5
Mappings:
  AvailabilityZoneMap:
    us-east-1:
      az1: us-east-1e
      az2: us-east-1f
      az3: us-east-1d
    us-east-2:
      az1: us-east-2b
      az2: us-east-2c
      az3: us-east-2a
    us-west-1:
      az1: us-west-1a
      az2: us-west-1b
      az3: us-west-1a
    us-west-2:
      az1: us-west-2b
      az2: us-west-2c
      az3: us-west-2a
    ap-south-1:
      az1: ap-south-1a
      az2: ap-south-1b
      az3: ap-south-1a
    ap-northeast-1:
      az1: ap-northeast-1c
      az2: ap-northeast-1d
      az3: ap-northeast-1a
    ap-northeast-2:
      az1: ap-northeast-2a
      az2: ap-northeast-2c
      az3: ap-northeast-2a
    ap-southeast-1:
      az1: ap-southeast-1b
      az2: ap-southeast-1c
      az3: ap-southeast-1a
    ap-southeast-2:
      az1: ap-southeast-2b
      az2: ap-southeast-2c
      az3: ap-southeast-2a
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: Consul cluster
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Consul cluster
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Consul cluster
  PublicRoutingRule:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
    DependsOn: VPCGatewayAttachment
  PublicSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !FindInMap [AvailabilityZoneMap, !Ref Region, az1]
      CidrBlock: 10.10.1.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public Subnet AZ-1 (10.10.1.0/24)
  RouteTableAssociationPublicSubnet1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnetAz1
  PrivateSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !FindInMap [AvailabilityZoneMap, !Ref Region, az1]
      CidrBlock: 10.10.101.0/24
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private Subnet AZ-1 (10.10.101.0/24)
  PublicSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !FindInMap [AvailabilityZoneMap, !Ref Region, az2]
      CidrBlock: 10.10.2.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public Subnet AZ-2 (10.10.2.0/24)
  RouteTableAssociationPublicSubnet2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnetAz2
  PrivateSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !FindInMap [AvailabilityZoneMap, !Ref Region, az2]
      CidrBlock: 10.10.102.0/24
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private Subnet AZ-2 (10.10.102.0/24)
  PublicSubnetAz3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !FindInMap [AvailabilityZoneMap, !Ref Region, az3]
      CidrBlock: 10.10.3.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public Subnet AZ-3 (10.10.3.0/24)
  RouteTableAssociationPublicSubnet3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnetAz3
  PrivateSubnetAz3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !FindInMap [AvailabilityZoneMap, !Ref Region, az3]
      CidrBlock: 10.10.103.0/24
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private Subnet AZ-3 (10.10.103.0/24)
  ConsulSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for web servers
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        Description: Allow SSH
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
      - CidrIp: !GetAtt VPC.CidrBlock
        FromPort: 8300
        ToPort: 8302
        IpProtocol: tcp
      - CidrIp: !GetAtt VPC.CidrBlock
        FromPort: 8301
        ToPort: 8302
        IpProtocol: udp
      - CidrIp: !GetAtt VPC.CidrBlock
        FromPort: 8400
        ToPort: 8400
        IpProtocol: tcp
      - CidrIp: 0.0.0.0/0
        FromPort: 8500
        ToPort: 8500
        IpProtocol: tcp
      - CidrIp: !GetAtt VPC.CidrBlock
        FromPort: 8600
        ToPort: 8600
        IpProtocol: tcp
      - CidrIp: !GetAtt VPC.CidrBlock
        FromPort: 8600
        ToPort: 8600
        IpProtocol: udp
      Tags:
        - Key: Name
          Value: Consul Security Group
  ConsulAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 3
      HealthCheckGracePeriod: 120
      HealthCheckType: ELB
      TargetGroupARNs:
        - !Ref ConsulTargetGroup
      LaunchTemplate:
        LaunchTemplateId: !Ref ConsulLaunchTemplate
        Version: 1
      MinSize: 3
      MaxSize: 9
      VPCZoneIdentifier:
        - !Ref PublicSubnetAz1
        - !Ref PublicSubnetAz2
        - !Ref PublicSubnetAz3
  ConsulLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: consul-cluster
      LaunchTemplateData:
        ImageId: !Ref BaseImageId
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !GetAtt ConsulSecurityGroup.GroupId
        IamInstanceProfile: 
          Arn: !GetAtt InstanceProfile.Arn
        BlockDeviceMappings:
          - DeviceName: /dev/xvdf
            Ebs:
              DeleteOnTermination: false
              VolumeSize: !Ref DataVolumeSize
              VolumeType: gp2
        UserData:
          Fn::Base64: !Join
            - "\n"
            - - "#!/usr/bin/env bash"
              - "# mount ebs volume"
              - sudo pvcreate /dev/xvdf
              - sudo vgcreate vg0 /dev/xvdf
              - sudo lvcreate -l 100%FREE -n consul vg0
              - sudo mkfs.ext4 /dev/vg0/consul
              - sudo mkdir -p /var/consul
              - echo "/dev/mapper/vg0-consul /var/consul ext4 defaults 0 2" | sudo tee -a /etc/fstab
              - sudo mount -a
              - "# configure consul"
              - AWS_DEFAULT_REGION=`curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -c -r .region`
              - "echo {\\\"bootstrap_expect\\\": 3,\\\"bind_addr\\\": \\\"0.0.0.0\\\",\\\"client_addr\\\": \\\"0.0.0.0\\\",\\\"data_dir\\\": \\\"/var/consul\\\",\\\"enable_script_checks\\\": true,\\\"enable_syslog\\\": true,\\\"server\\\": true,\\\"ui\\\": true,\\\"log_level\\\": \\\"INFO\\\",\\\"datacenter\\\": \\\"${AWS_DEFAULT_REGION}\\\", \\\"retry_join\\\": [\\\"provider=aws tag_key=consul-auto-join tag_value=server\\\"], \\\"rejoin_after_leave\\\": true} | sudo tee /etc/consul.d/config.json"
              - sudo systemctl restart consul
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: Consul server
              - Key: consul-auto-join
                Value: server
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: Consul server
  ConsulLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group load balancer of consul cluster
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        ToPort: 80
        IpProtocol: tcp
      Tags:
        - Key: Name
          Value: Consul load balancer security group
  ConsulLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
        - !Ref PublicSubnetAz1
        - !Ref PublicSubnetAz2
        - !Ref PublicSubnetAz3
      SecurityGroups:
        - !GetAtt ConsulLoadBalancerSecurityGroup.GroupId
  ConsulTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Protocol: HTTP
      Port: 8500
      HealthCheckProtocol: HTTP
      HealthCheckPort: 8500
      HealthCheckPath: /v1/health/checks/consul
      VpcId: !Ref VPC
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
  ConsulUiListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ConsulTargetGroup
      LoadBalancerArn: !Ref ConsulLoadBalancer
      Port: 80
      Protocol: HTTP
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref DescribeInstanceRole
  DescribeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: describe-instances-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                Resource:
                  - "*"
Outputs:
  ConsulClusterUrl:
    Description: URL to access Consul UI of the cluster
    Value: !Join
      - ""
      - - "http://"
        - !GetAtt ConsulLoadBalancer.DNSName
